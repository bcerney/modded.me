image:
    # TODO: update to latest version, locally and here
    name: docker/compose:latest
    # https://stackoverflow.com/questions/48945972/gitlab-runner-locally-no-such-command-sh
    # https://stackoverflow.com/questions/39868369/run-docker-compose-build-in-gitlab-ci-yml/41455005#41455005
    entrypoint: ["/bin/sh", "-c"]

services:
    - docker:dind

variables:
    # TODO: research these variables, read URL below
    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
    DOCKER_HOST: tcp://docker:2375/
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-the-overlayfs-driver
    DOCKER_DRIVER: overlay2

    # TODO: commit sha needed? revisit
    CI_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-$CI_COMMIT_REF_SLUG
    CI_TEST_LATEST: $CI_REGISTRY_IMAGE:test-latest
    CI_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:master
    # TODO: add psql variables, parameterize repeated values like compose file

    #TODO: replace before_script with extends syntax
    # https://stackoverflow.com/questions/54074433/gitlab-ci-specifying-stages-in-before-script
# before_script:
    # https://docs.gitlab.com/ee/user/packages/container_registry/#authenticating-to-the-container-registry-with-gitlab-cicd
    # - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

stages:
    - build
    - test
    - test-deploy
    - release
    - deploy

# build:
#     stage: build
#     script:
#         # https://docs.gitlab.com/ee/user/packages/container_registry/#authenticating-to-the-container-registry-with-gitlab-cicd
#         - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#         # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#using-docker-caching
#         - docker pull $CI_TEST_IMAGE || true
#         # TODO: removed --pull to test cacheing impact, test and revisit
#         - docker build --cache-from $CI_TEST_IMAGE --tag $CI_TEST_IMAGE --tag $CI_TEST_LATEST .
#         - docker push $CI_TEST_IMAGE
#         - docker push $CI_TEST_LATEST
#     when: manual

# TODO: integrate black and test into test-deploy
# black:
#     stage: test
#     script:
#         - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#         - docker-compose -f docker-compose.test.yml up -d
#         # https://medium.com/@zhao.li/how-to-understand-the-difference-between-docker-composes-up-vs-run-vs-exec-commands-a506151967df
#         - docker-compose -f docker-compose.test.yml exec -T web black --check .
#     when: manual

# test:
#     stage: test
#     script:
#         - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#         - docker-compose -f docker-compose.test.yml up -d
#         - docker-compose -f docker-compose.test.yml exec  -T web make test
#     when: manual
#     allow_failure: true

test-deploy:
    stage: test-deploy
    image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
    script:
        # Replace placeholder with correct branch
        - sed -i "s/BRANCH_TO_CHECKOUT/$CI_COMMIT_REF_SLUG/" user-data-test.txt
        # Get test-latest EBS SnapshotId 
        - SNAPSHOT_ID=$(aws ec2 describe-snapshots --filters Name=tag:Env,Values=test-latest --query "Snapshots[*].[SnapshotId]" --output text)
        # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html
        - aws ec2 run-instances --launch-template LaunchTemplateId=lt-0adba46df63d6f34f --block-device-mappings "DeviceName=/dev/sdb,Ebs={DeleteOnTermination=true,SnapshotId=$SNAPSHOT_ID,VolumeSize=20,VolumeType=gp2}" --user-data file://user-data-test.txt
        # - aws ec2 run-instances --launch-template LaunchTemplateId=lt-0adba46df63d6f34f --user-data file://user-data-test.txt
    when: manual


# release-image:
#     stage: release
#     script:
#         - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#         - docker pull $CI_TEST_IMAGE
#         - docker tag $CI_TEST_IMAGE $CI_RELEASE_IMAGE
#         - docker push $CI_RELEASE_IMAGE
#     only:
#         - master

release-deploy:
    stage: deploy
    image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
    # TODO: update prod template w/ non-spot instance
    script:
        # Get test-latest EBS SnapshotId 
        - SNAPSHOT_ID=$(aws ec2 describe-snapshots --filters Name=tag:Env,Values=test-latest --query "Snapshots[*].[SnapshotId]" --output text)
        - aws ec2 run-instances --launch-template LaunchTemplateId=lt-0adba46df63d6f34f --block-device-mappings "DeviceName=/dev/sdb,Ebs={DeleteOnTermination=true,SnapshotId=$SNAPSHOT_ID,VolumeSize=20,VolumeType=gp2}" --user-data file://user-data-prod.txt
    when: manual
    only:
        - master

# https://stackoverflow.com/questions/42295457/using-docker-compose-in-a-gitlab-ci-pipeline
# https://bohumirzamecnik.cz/blog/2018/gitlab-docker-compose-tests/
